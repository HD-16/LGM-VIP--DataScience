pragma solidity >= 0.7.0<0.8.0;
//any compiler between 0.7.0<0.8.0 will compile smart contract smoothly without error.
// Build the Contract
contract MarksManagmtSys
{
	// Create a structure for
	// student details
	struct Student
	{
		int ID;
		string fName;
		string lName;
		int marks;
	}

	address owner;//use to store owners addr.
	int public stdCount = 0;
	mapping(int => Student) public stdRecords;//store balance of each user.

	modifier onlyOwner
	{
		//modifies function, use to restric functionalities of function to owner of SC.
		require(owner == msg.sender);
		_;
	}
	constructor()
	{
		owner=msg.sender;//current user which is interacting with SC.
	}

	// Create a function to add
	// the new records
	function addNewRecords(int _ID,
						string memory _fName,
						string memory _lName,
						int _marks) public onlyOwner
	{
		// Increase the count by 1
		stdCount = stdCount + 1;

		// Fetch the student details
		// with the help of stdCount
		stdRecords[stdCount] = Student(_ID, _fName,
									_lName, _marks);
	}

	// Create a function to add bonus marks
	function bonusMarks(int _bonus) public onlyOwner
	{
		stdRecords[stdCount].marks =
					stdRecords[stdCount].marks + _bonus;
	}
}